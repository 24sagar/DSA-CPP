C++ Recursion
Recursion in C++ is a technique in which a function calls itself repeatedly until a given condition is satisfied. 
In other words, recursion is the process of solving a problem by breaking it down into smaller, simpler sub-problems.

Syntax Structure of Recursion

return_type recursive_func {
    ....
       // Base Condition
       // Recursive Case
       ....
}

Recursive Function
A function that calls itself is called a recursive function.

Base Condition
The base condition is the condition that is used to terminate the recursion. 
The recursive function will keep calling itself till the base condition is satisfied.

Recursive Case
Recursive case is the way in which the recursive call is present in the function.

What is Stack Overflow?
Stack overflow is one of the most common errors associated with the recursion which occurs when a function calls itself too many times.
As we know that each recursive call requires separate space in the limited stack memory. 
When there is a large number of recursive calls or recursion goes on infinite times, 
this stack memory may get exhausted and may not be able to store more data leading to programâ€™s termination.

There are two different types of recursion which are as follows:

Direct Recursion
Indirect Recursion

In direct recursion, the function contains one or more recursive calls to itself.
The function directly calls itself in the direct recursion and there is no intermediate function.
Head Recursion
Tail recursion
Tree Recursion 

Indirect Recursion
In indirect recursion, the function does not call itself directly but instead, 
it calls another function which then eventually calls the first function creating a cycle of function calls.

Applications of Recursion
Solving: Fibonacci sequences, Factorial Function, Reversing an array
Backtracking: 
Searching and Sorting Algorithms:  binary search and quicksort.
Tree and Graph Traversal:  depth-first search and breadth-first search
Mathematical Computations:  factorial function and the Fibonacci sequence.
Dynamic Programming:


Drawbacks of Recursion
Performance: 
Memory usage: 
Code complexity: 
Debugging:
Stack Overflow:


