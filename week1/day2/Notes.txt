String in Data Structure

A string is a sequence of characters used to represent text. Strings are commonly used for storing and manipulating textual data in computer programs. 
They can be manipulated using various operations like concatenation, substring extraction, and comparison.

String Operations
Concatenation: Combining two strings to create a new string.
Length: Determining the number of characters in a string.
Access: Accessing individual characters in a string by index.
Substring: Extracting a portion of a string.
Comparison: Comparing two strings to check for equality or order.
Search: Finding the position of a specific substring within a string.
Modification: Changing or replacing characters within a string.

What is String?
Strings are considered a data type in general and are typically represented as arrays of bytes (or words) that store a sequence of characters. 
Strings are defined as an array of characters. The difference between a character array and a string is the string is terminated with a special character ‘\0’

 // Declare and initialize the string 
    string str1 = "Welcome to GeeksforGeeks!"; 

1. Concatenation of Strings
The process of combining more than one string together is known as Concatenation. String Concatenation is the technique of combining two strings. 

Methods of Concatenate String
There are 6 methods to Concatenate String  as mentioned below:

Using append( ) Function.
Using ‘+’ Operator.
Using strcat( ) Function.
Using C++ for Loop.
Using Inheritance.
Using the Friend Function and strcat() Function.

Tokenizing a string in C++
Tokenizing a string denotes splitting a string with respect to some delimiter(s).

There are many ways to tokenize a string.
Using stringstream
Using strtok()
Using strtok_r()
Using std::sregex_token_iterator

Substring in C++
The substring function is used for handling string operations like strcat(), append(), etc. 
It generates a new string with its value initialized to a copy of a sub-string of this object.

In C++, the header file which is required for  std::substr(), string functions is <string>. 

The substring function takes two values pos and len as an argument and returns 
a newly constructed string object with its value initialized to a copy of a sub-string of this object.

Syntax: 
string substr (size_t pos, size_t len) const;

Parameters:
pos: Position of the first character to be copied.
len: Length of the sub-string.
size_t: It is an unsigned integral type.

Important Points to Remember
The index of the first character is 0 (not 1).
If pos is equal to the string length, the function returns an empty string.
If pos is greater than the string length, it throws out_of_range. If this happens, there are no changes in the string.
If the requested sub-string len is greater than the size of a string, then returned sub-string is [pos, size()).
If len is not passed as a parameter, then returned sub-string is [pos, size()).

